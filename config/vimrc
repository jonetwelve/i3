"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 全局配置"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype on             " 侦测文件类型
filetype plugin on      " 载入文件类型插件
filetype indent on      " 为特定文件类型载入相关缩进文件
syntax on
set number
set hls is              " 搜索高亮"
set ic                  " 搜索忽略大小写"
set autoindent          " 设置自动缩进"
set tabstop=4           " tag长度"
set softtabstop=4       " 用空格代替tab"
set cursorline          " 高亮显示当前行"
set t_Co=256           " 设置终端支持的颜色是256颜色，这样才支持高亮当前行"
set bsdir=buffer        " 文件浏览目录为当前目录"
set autochdir           " 自动切换当前目录为文件所在目录"
set autoread            " 文件被修改后自动加载"
set nowrap              " 关闭自动换行"
set shiftwidth=4
set encoding=utf-8
set clipboard=unnamed   " 支持系统剪切板"
set mouse=a         " 设置可以使用鼠标变化窗口大小"
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}   "状态行显示的内容  
set scrolloff=3     " 光标移动到buffer的顶部和底部时保持3行距离 
set completeopt=preview,menu       "代码补全 
set autowrite           "自动保存

" 配色方案
colo slate
" 设置当前行背景色o"
hi CursorLine cterm=NONE ctermbg=236 guibg=#3a3a3a

" 记录光标位置
augroup resCur
  autocmd!
  autocmd BufReadPost * call setpos(".", getpos("'\""))
augroup END


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 插件
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'majutsushi/tagbar'
Plug 'lokaltog/vim-powerline'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-fugitive'
Plug 'garbas/vim-snipmate'
Plug 'marcweber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'honza/vim-snippets'
call plug#end()
"插件配置
" NERDT
map <F3> <ESC>:NERDTreeMirror<CR>
map <F3> <ESC>:NERDTreeToggle<CR>
let NERDTreeIgnore=['.*\.pyc', '__pycache__']
" tagbar"
nmap <F8> :TagbarToggle<CR>
" markdown"
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']
let g:markdown_syntax_conceal = 0
" snippets"
let g:snippets_dir="~/.vim/plugged/vim-snippets/snippets"


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
"自定义快捷键
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 打开上一个文件"
map <F4> <ESC>:bp<CR>
" 删除上一个buff
map <A-B> <ESC>:bd #<CR>
" 自动补全"
imap <C-a> <C-x><C-o>
" 切换打开的窗口"
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
"去空行  
nnoremap <F2> :g/^\s*$/d<CR> 
" 下一个标签页"
map <F7> <ESC>:tabn<CR>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
"新文件标题
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
"新建.py文件，自动插入文件头 
autocmd BufNewFile *.php,*.py exec ":call SetTitle()" 
""定义函数SetTitle，自动插入文件头 
func SetTitle() 
    "如果文件类型为.sh文件 
    if &filetype == 'php' 
        call setline(1,"<?php") 
        call append(line("."), "") 
    elseif &filetype == 'python'
        call setline(1,"#!/usr/bin/env python")
        call append(line("."),"# coding=utf-8")
        call append(line(".")+1, "") 
        call append(line(".")+1, "") 
        call append(line(".")+1, "") 
    else 
        call setline(1, "/*************************************************************************") 
        call append(line("."), "    > File Name: ".expand("%")) 
        call append(line(".")+1, "  > Author: ") 
        call append(line(".")+2, "  > Mail: ") 
        call append(line(".")+3, "  > Created Time: ".strftime("%c")) 
        call append(line(".")+4, " ************************************************************************/") 
        call append(line(".")+5, "")
    endif
    "新建文件后，自动定位到文件末尾
endfunc 
autocmd BufNewFile * normal G


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 按F5编译运行
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'python'
        exec "!time python3 %"
    elseif &filetype == 'html'
        exec "!firefox % &"
    endif
endfunc


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
"python补全
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:pydiction_location = '~/.vim/complete-dict'
let g:pydiction_menu_height = 20
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
"代码格式优化化
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <F6> :call FormartSrc()<CR><CR>
func FormartSrc()
    exec "w"
    if &filetype == 'py'||&filetype == 'python'
        exec "r !autopep8 -i --aggressive %"
    endif
    exec "e! %"
endfunc

